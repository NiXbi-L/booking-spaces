{"ast":null,"code":"// Get the current hostname and port\nconst getBaseUrl=()=>{const hostname=window.location.hostname;const port=window.location.port;const protocol=window.location.protocol;// If we're on localhost or 127.0.0.1, use the default backend URL\nif(hostname==='localhost'||hostname==='127.0.0.1'){return process.env.REACT_APP_API_URL||'http://localhost:8080';}// Otherwise, use the current hostname and port\nreturn`${protocol}//${hostname}${port?`:${port}`:''}`;};export const API_BASE_URL=getBaseUrl();export const WS_BASE_URL=API_BASE_URL.replace('http','ws');","map":{"version":3,"names":["getBaseUrl","hostname","window","location","port","protocol","process","env","REACT_APP_API_URL","API_BASE_URL","WS_BASE_URL","replace"],"sources":["C:/Users/DiXer/PycharmProjects/booking spaces/frontend/booking_front/src/config.ts"],"sourcesContent":["// Get the current hostname and port\r\nconst getBaseUrl = () => {\r\n  const hostname = window.location.hostname;\r\n  const port = window.location.port;\r\n  const protocol = window.location.protocol;\r\n  \r\n  // If we're on localhost or 127.0.0.1, use the default backend URL\r\n  if (hostname === 'localhost' || hostname === '127.0.0.1') {\r\n    return process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n  }\r\n  \r\n  // Otherwise, use the current hostname and port\r\n  return `${protocol}//${hostname}${port ? `:${port}` : ''}`;\r\n};\r\n\r\nexport const API_BASE_URL = getBaseUrl();\r\nexport const WS_BASE_URL = API_BASE_URL.replace('http', 'ws'); "],"mappings":"AAAA;AACA,KAAM,CAAAA,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAAC,QAAQ,CAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,CACzC,KAAM,CAAAG,IAAI,CAAGF,MAAM,CAACC,QAAQ,CAACC,IAAI,CACjC,KAAM,CAAAC,QAAQ,CAAGH,MAAM,CAACC,QAAQ,CAACE,QAAQ,CAEzC;AACA,GAAIJ,QAAQ,GAAK,WAAW,EAAIA,QAAQ,GAAK,WAAW,CAAE,CACxD,MAAO,CAAAK,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CACjE,CAEA;AACA,MAAO,GAAGH,QAAQ,KAAKJ,QAAQ,GAAGG,IAAI,CAAG,IAAIA,IAAI,EAAE,CAAG,EAAE,EAAE,CAC5D,CAAC,CAED,MAAO,MAAM,CAAAK,YAAY,CAAGT,UAAU,CAAC,CAAC,CACxC,MAAO,MAAM,CAAAU,WAAW,CAAGD,YAAY,CAACE,OAAO,CAAC,MAAM,CAAE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}