{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{authService}from'../services/api';import axios from'axios';import{API_BASE_URL}from'../config';import{jsx as _jsx}from\"react/jsx-runtime\";const API_URL=`${API_BASE_URL}/api`;export const AuthContext=/*#__PURE__*/createContext({isAuthenticated:false,token:null,login:async()=>{},register:async()=>{},logout:()=>{}});export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(()=>{return!!localStorage.getItem('token');});const[token,setToken]=useState(()=>{return localStorage.getItem('token');});const login=async(username,password)=>{try{console.log('Login attempt with:',{username,password});console.log('Sending POST request to:',`${API_URL}/auth/login/`);const response=await authService.login({username,password});console.log('Login response:',response);if(response.data&&response.data.token){localStorage.setItem('token',response.data.token);setToken(response.data.token);setIsAuthenticated(true);}else{throw new Error('Токен не получен');}}catch(error){console.error('Login error:',error);if(axios.isAxiosError(error)){var _error$config,_error$config2,_error$config3,_error$config4;console.error('Request details:',{url:(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url,method:(_error$config2=error.config)===null||_error$config2===void 0?void 0:_error$config2.method,headers:(_error$config3=error.config)===null||_error$config3===void 0?void 0:_error$config3.headers,data:(_error$config4=error.config)===null||_error$config4===void 0?void 0:_error$config4.data});}throw new Error('Ошибка входа. Проверьте правильность данных.');}};const register=async(username,password)=>{try{console.log('Register attempt with:',{username,password});await authService.register({username,password});await login(username,password);}catch(error){console.error('Register error:',error);throw new Error('Ошибка регистрации. Возможно, пользователь уже существует.');}};const logout=()=>{localStorage.removeItem('token');setToken(null);setIsAuthenticated(false);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,token,login,register,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useState","useContext","authService","axios","API_BASE_URL","jsx","_jsx","API_URL","AuthContext","isAuthenticated","token","login","register","logout","AuthProvider","_ref","children","setIsAuthenticated","localStorage","getItem","setToken","username","password","console","log","response","data","setItem","Error","error","isAxiosError","_error$config","_error$config2","_error$config3","_error$config4","url","config","method","headers","removeItem","Provider","value","useAuth"],"sources":["C:/Users/DiXer/PycharmProjects/booking spaces/frontend/booking_front/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode, useEffect } from 'react';\r\nimport { authService } from '../services/api';\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from '../config';\r\n\r\nconst API_URL = `${API_BASE_URL}/api`;\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  token: string | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  register: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType>({\r\n  isAuthenticated: false,\r\n  token: null,\r\n  login: async () => {},\r\n  register: async () => {},\r\n  logout: () => {},\r\n});\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(() => {\r\n    return !!localStorage.getItem('token');\r\n  });\r\n  const [token, setToken] = useState<string | null>(() => {\r\n    return localStorage.getItem('token');\r\n  });\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      console.log('Login attempt with:', { username, password });\r\n      console.log('Sending POST request to:', `${API_URL}/auth/login/`);\r\n      \r\n      const response = await authService.login({ username, password });\r\n      console.log('Login response:', response);\r\n      \r\n      if (response.data && response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        setToken(response.data.token);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        throw new Error('Токен не получен');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Request details:', {\r\n          url: error.config?.url,\r\n          method: error.config?.method,\r\n          headers: error.config?.headers,\r\n          data: error.config?.data\r\n        });\r\n      }\r\n      throw new Error('Ошибка входа. Проверьте правильность данных.');\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, password: string) => {\r\n    try {\r\n      console.log('Register attempt with:', { username, password });\r\n      await authService.register({ username, password });\r\n      await login(username, password);\r\n    } catch (error) {\r\n      console.error('Register error:', error);\r\n      throw new Error('Ошибка регистрации. Возможно, пользователь уже существует.');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, token, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}