{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api';const api=axios.create({baseURL:API_URL});api.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Token ${token}`;}return config;});export const authService={register:userData=>api.post('/auth/register/',userData),login:userData=>api.post('/auth/login/',userData)};export const spaceService={getAll:()=>api.get('/spaces/'),getBookings:(spaceId,date)=>api.get(`/spaces/${spaceId}/bookings/?date=${date}`)};export const bookingService={create:bookingData=>api.post('/bookings/',bookingData),delete:bookingId=>api.delete(`/bookings/${bookingId}/`)};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authService","register","userData","post","login","spaceService","getAll","get","getBookings","spaceId","date","bookingService","bookingData","delete","bookingId"],"sources":["C:/Users/DiXer/PycharmProjects/booking spaces/frontend/booking_front/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User, Space, Booking, AuthResponse } from '../types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const authService = {\r\n  register: (userData: User) => \r\n    api.post<AuthResponse>('/auth/register/', userData),\r\n  login: (userData: User) => \r\n    api.post<AuthResponse>('/auth/login/', userData),\r\n};\r\n\r\nexport const spaceService = {\r\n  getAll: () => \r\n    api.get<Space[]>('/spaces/'),\r\n  getBookings: (spaceId: number, date: string) => \r\n    api.get<Booking[]>(`/spaces/${spaceId}/bookings/?date=${date}`),\r\n};\r\n\r\nexport const bookingService = {\r\n  create: (bookingData: Omit<Booking, 'id' | 'user'>) => \r\n    api.post<Booking>('/bookings/', bookingData),\r\n  delete: (bookingId: number) => \r\n    api.delete(`/bookings/${bookingId}/`),\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE5E,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,OACX,CAAC,CAAC,CAEFI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACvC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACI,OAAO,CAACC,aAAa,CAAG,SAASJ,KAAK,EAAE,CACjD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAM,WAAW,CAAG,CACzBC,QAAQ,CAAGC,QAAc,EACvBd,GAAG,CAACe,IAAI,CAAe,iBAAiB,CAAED,QAAQ,CAAC,CACrDE,KAAK,CAAGF,QAAc,EACpBd,GAAG,CAACe,IAAI,CAAe,cAAc,CAAED,QAAQ,CACnD,CAAC,CAED,MAAO,MAAM,CAAAG,YAAY,CAAG,CAC1BC,MAAM,CAAEA,CAAA,GACNlB,GAAG,CAACmB,GAAG,CAAU,UAAU,CAAC,CAC9BC,WAAW,CAAEA,CAACC,OAAe,CAAEC,IAAY,GACzCtB,GAAG,CAACmB,GAAG,CAAY,WAAWE,OAAO,mBAAmBC,IAAI,EAAE,CAClE,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC5BtB,MAAM,CAAGuB,WAAyC,EAChDxB,GAAG,CAACe,IAAI,CAAU,YAAY,CAAES,WAAW,CAAC,CAC9CC,MAAM,CAAGC,SAAiB,EACxB1B,GAAG,CAACyB,MAAM,CAAC,aAAaC,SAAS,GAAG,CACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}